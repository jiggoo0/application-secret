'use client';

import PropTypes from 'prop-types';
import ClientProviders from './providers/ClientProviders';

/**
 * ‚úÖ Global Providers Wrapper (Next.js App Router)
 * -----------------------------------------------------
 * - ‡∏Ñ‡∏£‡∏≠‡∏ö global context ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î (Theme, Query, Modal, Toast)
 * - ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô crash ‡∏à‡∏≤‡∏Å provider ‡∏†‡∏≤‡∏¢‡πÉ‡∏ô (safety fallback)
 * - ‡πÉ‡∏ä‡πâ‡πÉ‡∏ô layout.js
 */
export default function Providers({ children }) {
  try {
    return (
      <ClientProviders>
        {/* üîß ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏û‡∏¥‡πà‡∏° Global Context ‡∏≠‡∏∑‡πà‡∏ô‡πÑ‡∏î‡πâ‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà */}
        {children}
      </ClientProviders>
    );
  } catch (err) {
    console.error('Providers Error:', err);
    return (
      <div className="flex min-h-screen items-center justify-center bg-red-50 text-red-700">
        <p className="text-sm font-medium sm:text-base">
          Provider initialization failed ‚Äî check console for details.
        </p>
      </div>
    );
  }
}

Providers.propTypes = {
  /** ‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤ React ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏≠‡∏¢‡∏π‡πà‡∏†‡∏≤‡∏¢‡πÉ‡∏ï‡πâ provider */
  children: PropTypes.node.isRequired,
};
