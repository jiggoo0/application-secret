// app/user/page.server.jsx
'use server';

import { getServerSession } from 'next-auth';
import { authOptions } from '@/lib/auth';
import { getRoadmap } from '@/lib/services/roadmap/RoadmapService';
import { getTargets } from '@/lib/services/target/TargetService';
import UserDashboardClient from './UserDashboardClient';
import { redirect } from 'next/navigation';

export default async function UserDashboardPageServer() {
  // üîê ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö session ‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
  const session = await getServerSession(authOptions);

  if (!session?.user) {
    // ‡∏´‡∏≤‡∏Å‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà login ‡πÉ‡∏´‡πâ redirect ‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤ /login
    redirect('/login');
  }

  // üßë‚Äçüíª ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏à‡∏≤‡∏Å session
  const user = {
    name: session.user.name || session.user.email || '‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô',
    email: session.user.email || '-',
    role: session.user.role || 'user',
    image: session.user.image || null,
  };

  // üìä ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• roadmap ‡πÅ‡∏•‡∏∞ targets ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Å‡∏±‡∏ô
  let roadmap = [];
  let targets = [];

  try {
    [roadmap, targets] = await Promise.all([getRoadmap(), getTargets()]);
  } catch (err) {
    console.error('[UserDashboardPageServer] Failed to fetch roadmap/targets:', err);
    // fallback ‡∏ñ‡πâ‡∏≤‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß
    roadmap = [];
    targets = [];
  }

  // ‚ö° ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏õ‡∏¢‡∏±‡∏á client component
  return <UserDashboardClient user={user} roadmap={roadmap} targets={targets} />;
}
