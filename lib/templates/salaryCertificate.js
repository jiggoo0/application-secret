/**
 * üîí ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô XSS ‡∏î‡πâ‡∏ß‡∏¢‡∏Å‡∏≤‡∏£ escape HTML
 */
function escapeHTML(str = '') {
  return String(str)
    .replace(/&/g, '&amp;')
    .replace(/</g, '&lt;')
    .replace(/>/g, '&gt;')
    .replace(/"/g, '&quot;')
    .replace(/'/g, '&#039;');
}

/**
 * üìÑ ‡∏™‡∏£‡πâ‡∏≤‡∏á HTML ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏£‡∏±‡∏ö‡∏£‡∏≠‡∏á‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏î‡∏∑‡∏≠‡∏ô
 * @param {Object} data
 * @returns {string} HTML string
 */
export function renderSalaryCertificateHTML(data) {
  const {
    employeeName = '-',
    employeePosition = '-',
    employeeID = '-',
    companyName = '‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó JP Visual & Docs ‡∏à‡∏≥‡∏Å‡∏±‡∏î',
    companyAddress = '123 ‡∏ñ‡∏ô‡∏ô‡∏™‡∏∏‡∏Ç‡∏∏‡∏°‡∏ß‡∏¥‡∏ó ‡πÅ‡∏Ç‡∏ß‡∏á‡∏Ñ‡∏•‡∏≠‡∏á‡πÄ‡∏ï‡∏¢ ‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏Ø 10110',
    salaryAmount = '-',
    salaryPeriod = '-',
    issuedAt = new Date().toISOString(),
    issuedBy = '‡∏ù‡πà‡∏≤‡∏¢‡∏ó‡∏£‡∏±‡∏û‡∏¢‡∏≤‡∏Å‡∏£‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏•',
    notes = '',
  } = data;

  const issuedDate = new Date(issuedAt);
  const formattedDate = isNaN(issuedDate.getTime())
    ? '-'
    : issuedDate.toLocaleDateString('th-TH', {
        year: 'numeric',
        month: 'long',
        day: 'numeric',
      });

  return `
    <!DOCTYPE html>
    <html lang="th">
      <head>
        <meta charset="UTF-8" />
        <title>‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏£‡∏±‡∏ö‡∏£‡∏≠‡∏á‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏î‡∏∑‡∏≠‡∏ô</title>
        <style>
          body { font-family: sans-serif; padding: 2rem; line-height: 1.6; color: #333; }
          h1 { text-align: center; font-size: 1.5rem; margin-bottom: 2rem; }
          .section { margin-bottom: 1.5rem; }
          .center { text-align: center; }
          .right { text-align: right; margin-top: 3rem; }
        </style>
      </head>
      <body>
        <h1>‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏£‡∏±‡∏ö‡∏£‡∏≠‡∏á‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏î‡∏∑‡∏≠‡∏ô</h1>

        <div class="section center">
          <p>${escapeHTML(companyName)}</p>
          <p>${escapeHTML(companyAddress)}</p>
        </div>

        <div class="section">
          <p>‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏â‡∏ö‡∏±‡∏ö‡∏ô‡∏µ‡πâ‡∏≠‡∏≠‡∏Å‡πÉ‡∏´‡πâ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏£‡∏±‡∏ö‡∏£‡∏≠‡∏á‡∏ß‡πà‡∏≤</p>
          <p>${escapeHTML(employeeName)} ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á ${escapeHTML(employeePosition)} ‡∏£‡∏´‡∏±‡∏™‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô ${escapeHTML(employeeID)}</p>
          <p>‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏à‡∏≥‡∏ô‡∏ß‡∏ô ${escapeHTML(salaryAmount)} ‡∏ö‡∏≤‡∏ó (${escapeHTML(salaryPeriod)})</p>
          <p>‡∏≠‡∏≠‡∏Å‡πÉ‡∏´‡πâ ‡∏ì ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà ${formattedDate}</p>
        </div>

        <div class="right">
          <p>‡∏•‡∏á‡∏ä‡∏∑‡πà‡∏≠.................................................</p>
          <p>(${escapeHTML(issuedBy)})</p>
          <p>‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á: ‡∏ù‡πà‡∏≤‡∏¢‡∏ó‡∏£‡∏±‡∏û‡∏¢‡∏≤‡∏Å‡∏£‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏•</p>
        </div>

        ${
          notes?.trim()
            ? `<div class="section"><strong>‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏:</strong><p>${escapeHTML(notes)}</p></div>`
            : ''
        }
      </body>
    </html>
  `;
}

/**
 * üßæ ‡∏™‡∏£‡πâ‡∏≤‡∏á PDF ‡∏î‡πâ‡∏ß‡∏¢ PDFKit ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏£‡∏±‡∏ö‡∏£‡∏≠‡∏á‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏î‡∏∑‡∏≠‡∏ô
 * @param {PDFKit.PDFDocument} doc
 * @param {Object} data
 */
export function renderSalaryCertificatePDF(doc, data) {
  const {
    employeeName = '-',
    employeePosition = '-',
    employeeID = '-',
    companyName = '‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó JP Visual & Docs ‡∏à‡∏≥‡∏Å‡∏±‡∏î',
    companyAddress = '123 ‡∏ñ‡∏ô‡∏ô‡∏™‡∏∏‡∏Ç‡∏∏‡∏°‡∏ß‡∏¥‡∏ó ‡πÅ‡∏Ç‡∏ß‡∏á‡∏Ñ‡∏•‡∏≠‡∏á‡πÄ‡∏ï‡∏¢ ‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏Ø 10110',
    salaryAmount = '-',
    salaryPeriod = '-',
    issuedAt = new Date().toISOString(),
    issuedBy = '‡∏ù‡πà‡∏≤‡∏¢‡∏ó‡∏£‡∏±‡∏û‡∏¢‡∏≤‡∏Å‡∏£‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏•',
    notes = '',
  } = data;

  const issuedDate = new Date(issuedAt);
  const formattedDate = isNaN(issuedDate.getTime())
    ? '-'
    : issuedDate.toLocaleDateString('th-TH', {
        year: 'numeric',
        month: 'long',
        day: 'numeric',
      });

  doc.fontSize(18).text('‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏£‡∏±‡∏ö‡∏£‡∏≠‡∏á‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏î‡∏∑‡∏≠‡∏ô', { align: 'center' });
  doc.moveDown();

  doc.fontSize(12).text(companyName, { align: 'center' });
  doc.text(companyAddress, { align: 'center' });
  doc.moveDown();

  doc.text('‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏â‡∏ö‡∏±‡∏ö‡∏ô‡∏µ‡πâ‡∏≠‡∏≠‡∏Å‡πÉ‡∏´‡πâ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏£‡∏±‡∏ö‡∏£‡∏≠‡∏á‡∏ß‡πà‡∏≤');
  doc.text(`${employeeName} ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á ${employeePosition} ‡∏£‡∏´‡∏±‡∏™‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô ${employeeID}`);
  doc.text(`‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏à‡∏≥‡∏ô‡∏ß‡∏ô ${salaryAmount} ‡∏ö‡∏≤‡∏ó (${salaryPeriod})`);
  doc.text(`‡∏≠‡∏≠‡∏Å‡πÉ‡∏´‡πâ ‡∏ì ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà ${formattedDate}`);
  doc.moveDown();

  doc.text('‡∏•‡∏á‡∏ä‡∏∑‡πà‡∏≠.................................................', { align: 'right' });
  doc.text(`(${issuedBy})`, { align: 'right' });
  doc.text('‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á: ‡∏ù‡πà‡∏≤‡∏¢‡∏ó‡∏£‡∏±‡∏û‡∏¢‡∏≤‡∏Å‡∏£‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏•', { align: 'right' });

  if (notes?.trim()) {
    doc.moveDown();
    doc.font('Helvetica-Bold').text('‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏:');
    doc.font('Helvetica').text(notes);
  }
}
