import fs from 'fs/promises';
import path from 'path';

/**
 * üîí ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô XSS ‡∏î‡πâ‡∏ß‡∏¢‡∏Å‡∏≤‡∏£ escape HTML
 */
function escapeHtml(str) {
  return String(str)
    .replace(/&/g, '&amp;')
    .replace(/</g, '&lt;')
    .replace(/>/g, '&gt;')
    .replace(/"/g, '&quot;')
    .replace(/'/g, '&#039;');
}

/**
 * üßº ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏ü‡∏•‡πå‡πÑ‡∏°‡πà‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢
 */
function sanitizeFileName(name) {
  return String(name).replace(/[^a-zA-Z0-9-_]/g, '_');
}

/**
 * üìÑ ‡∏™‡∏£‡πâ‡∏≤‡∏á HTML ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÉ‡∏ö‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ
 * @param {Object} license
 * @returns {Promise<string|null>} - path ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö preview ‡∏´‡∏£‡∏∑‡∏≠ null ‡∏ñ‡πâ‡∏≤‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß
 */
export async function renderLicenseTemplate(license) {
  if (!license || typeof license !== 'object') {
    console.warn('[LicenseTemplate] ‚ö†Ô∏è license object ‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á:', license);
    return null;
  }

  const { id, name = '-', type = '-', issuedAt = new Date().toISOString() } = license;

  if (typeof id !== 'string' || !id.trim()) {
    console.warn('[LicenseTemplate] ‚ö†Ô∏è license.id ‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á:', id);
    return null;
  }

  const safeId = sanitizeFileName(id);
  const safeName = escapeHtml(name);
  const safeType = escapeHtml(type);
  const issuedDate = new Date(issuedAt);
  const formattedDate = isNaN(issuedDate.getTime())
    ? '-'
    : issuedDate.toLocaleDateString('th-TH', {
        year: 'numeric',
        month: 'long',
        day: 'numeric',
      });

  const html = `
    <!DOCTYPE html>
    <html lang="th">
      <head>
        <meta charset="UTF-8" />
        <title>‡πÉ‡∏ö‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ</title>
        <style>
          body { font-family: sans-serif; padding: 2rem; line-height: 1.6; color: #333; }
          h1 { text-align: center; font-size: 1.5rem; margin-bottom: 2rem; }
          .section { margin-bottom: 1.5rem; }
          .signature { text-align: right; margin-top: 3rem; }
        </style>
      </head>
      <body>
        <h1>‡πÉ‡∏ö‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ</h1>

        <div class="section">
          <p>‡∏ä‡∏∑‡πà‡∏≠: ${safeName}</p>
          <p>‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó: ${safeType}</p>
          <p>‡∏£‡∏´‡∏±‡∏™‡πÉ‡∏ö‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï: ${safeId}</p>
          <p>‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏≠‡∏≠‡∏Å‡πÉ‡∏ö‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï: ${formattedDate}</p>
        </div>

        <div class="signature">
          <p>‡∏•‡∏á‡∏ä‡∏∑‡πà‡∏≠.........................................................</p>
          <p>(‡πÄ‡∏à‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏≠‡∏≠‡∏Å‡πÉ‡∏ö‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï)</p>
          <p>‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á: ‡πÄ‡∏à‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô</p>
        </div>
      </body>
    </html>
  `;

  try {
    const filePath = path.join(process.cwd(), 'public', 'preview', `${safeId}.html`);
    await fs.mkdir(path.dirname(filePath), { recursive: true });
    await fs.writeFile(filePath, html, 'utf-8');
    return `/preview/${safeId}.html`;
  } catch (err) {
    console.error('[LicenseTemplate] ‚ùå ‡∏™‡∏£‡πâ‡∏≤‡∏á HTML preview ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß:', err);
    return null;
  }
}

/**
 * üßæ ‡∏™‡∏£‡πâ‡∏≤‡∏á PDF ‡∏î‡πâ‡∏ß‡∏¢ PDFKit ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÉ‡∏ö‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ
 * @param {PDFDocument} doc
 * @param {Object} license
 */
export function renderLicenseTemplatePDF(doc, license) {
  const { id = '-', name = '-', type = '-', issuedAt = new Date().toISOString() } = license;

  const issuedDate = new Date(issuedAt);
  const formattedDate = isNaN(issuedDate.getTime())
    ? '-'
    : issuedDate.toLocaleDateString('th-TH', {
        year: 'numeric',
        month: 'long',
        day: 'numeric',
      });

  doc.fontSize(18).text('‡πÉ‡∏ö‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ', { align: 'center' });
  doc.moveDown();

  doc.fontSize(12).text(`‡∏ä‡∏∑‡πà‡∏≠: ${name}`);
  doc.text(`‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó: ${type}`);
  doc.text(`‡∏£‡∏´‡∏±‡∏™‡πÉ‡∏ö‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï: ${id}`);
  doc.text(`‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏≠‡∏≠‡∏Å‡πÉ‡∏ö‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï: ${formattedDate}`);
  doc.moveDown();

  doc.text('‡∏•‡∏á‡∏ä‡∏∑‡πà‡∏≠.........................................................', {
    align: 'right',
  });
  doc.text('(‡πÄ‡∏à‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏≠‡∏≠‡∏Å‡πÉ‡∏ö‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï)', { align: 'right' });
  doc.text('‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á: ‡πÄ‡∏à‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô', { align: 'right' });
}
