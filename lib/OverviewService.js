import { createClient } from '@supabase/supabase-js';

// ‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á Supabase client ‡∏î‡πâ‡∏ß‡∏¢ Service Role Key
const supabase = createClient(process.env.SUPABASE_URL, process.env.SUPABASE_SERVICE_ROLE_KEY);

/**
 * üìä ‡∏£‡∏ß‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏†‡∏≤‡∏û‡∏£‡∏ß‡∏°‡∏à‡∏≤‡∏Å‡∏´‡∏•‡∏≤‡∏¢‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö
 * @returns {Promise<{
 *   totalUsers: number,
 *   totalUploads: number,
 *   totalLicenses: number,
 *   totalCertificates: number,
 *   lastUpdated: string
 * }>}
 */
export async function getOverviewStats() {
  try {
    // ‚úÖ ‡∏î‡∏∂‡∏á‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡πÅ‡∏ö‡∏ö‡∏Ç‡∏ô‡∏≤‡∏ô
    const [users, uploads, licenses, certificates] = await Promise.all([
      supabase.from('users').select('*', { count: 'exact', head: true }),
      supabase.from('uploads').select('*', { count: 'exact', head: true }),
      supabase.from('licenses').select('*', { count: 'exact', head: true }),
      supabase.from('certificates').select('*', { count: 'exact', head: true }),
    ]);

    // ‚úÖ ‡∏£‡∏ß‡∏° error ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ
    const error = users.error || uploads.error || licenses.error || certificates.error;

    if (error) {
      console.error('[OverviewService] ‚ùå Supabase query failed:', error);
      throw new Error('‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏†‡∏≤‡∏û‡∏£‡∏ß‡∏°‡πÑ‡∏î‡πâ');
    }

    // ‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏†‡∏≤‡∏û‡∏£‡∏ß‡∏°
    return {
      totalUsers: extractCount(users),
      totalUploads: extractCount(uploads),
      totalLicenses: extractCount(licenses),
      totalCertificates: extractCount(certificates),
      lastUpdated: new Date().toISOString(),
    };
  } catch (err) {
    console.error('[OverviewService] ‚ùå Unexpected error:', err);
    throw new Error('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏†‡∏≤‡∏û‡∏£‡∏ß‡∏°');
  }
}

/**
 * ‚úÖ ‡∏î‡∏∂‡∏á‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏à‡∏≤‡∏Å‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå Supabase
 * @param {object} result - ‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏à‡∏≤‡∏Å Supabase query
 * @returns {number}
 */
function extractCount(result) {
  return typeof result?.count === 'number' ? result.count : 0;
}
