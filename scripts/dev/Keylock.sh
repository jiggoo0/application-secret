#!/usr/bin/env bash

# ЁЯУБ Path р╣Др╕Ыр╕вр╕▒р╕З Keylock.json (р╕кр╕▒р╕бр╕Юр╕▒р╕Чр╕Шр╣Мр╕Ир╕▓р╕Бр╕Хр╕│р╣Бр╕лр╕Щр╣Ир╕Зр╕кр╕Др╕гр╕┤р╕Ыр╕Хр╣М)
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
KEYLOCK_PATH="$SCRIPT_DIR/../../data/Keylock.json"

# ЁЯФР р╕гр╕▒р╕Ър╕гр╕лр╕▒р╕кр╕Ир╕▓р╕Б argument р╕лр╕гр╕╖р╕н prompt
INPUT_CODE="$1"
RESET_FLAG="$2" # р╕Цр╣Йр╕▓р╣Гр╕кр╣И "reset" р╕Ир╕░р╕ер╣Йр╕▓р╕Зр╕Чр╕▒р╣Йр╕Зр╕лр╕бр╕Ф

# тЬЕ р╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ър╕зр╣Ир╕▓р╣Гр╕кр╣Ир╕гр╕лр╕▒р╕кр╕лр╕гр╕╖р╕нр╕вр╕▒р╕З
if [[ -z "$INPUT_CODE" ]]; then
  read -p "р╕Бр╕гр╕╕р╕Ур╕▓р╣Гр╕кр╣Ир╕гр╕лр╕▒р╕кр╕Ыр╕ер╕Фр╕ер╣Зр╕нр╕Б: " INPUT_CODE
fi

# ЁЯФД р╣Бр╕Ыр╕ер╕Зр╕гр╕лр╕▒р╕кр╣Ар╕Ыр╣Зр╕Щ base64
ENCODED_CODE=$(echo -n "$INPUT_CODE" | base64)

# ЁЯз╣ р╕Цр╣Йр╕▓р╣Гр╕кр╣И "reset" р╣Гр╕лр╣Йр╕ер╣Йр╕▓р╕Зр╣Др╕Яр╕ер╣Мр╕Бр╣Ир╕нр╕Щ
if [[ "$RESET_FLAG" == "reset" ]]; then
  echo "[]" > "$KEYLOCK_PATH"
  echo "ЁЯз╣ р╕ер╣Йр╕▓р╕З Keylock.json р╣Бр╕ер╣Йр╕зр╣Ар╕гр╕┤р╣Ир╕бр╣Гр╕лр╕бр╣И"
fi

# ЁЯУж р╕кр╕гр╣Йр╕▓р╕Зр╕гр╕лр╕▒р╕кр╣Гр╕лр╕бр╣Ир╣Гр╕Щр╕гр╕╣р╕Ыр╣Бр╕Ър╕Ъ JSON (р╣Др╕бр╣Ир╕бр╕╡ expiresAt р╣Бр╕ер╣Йр╕з)
NEW_ENTRY=$(cat <<EOF
{
  "hashedCode": "$ENCODED_CODE",
  "used": false
}
EOF
)

# ЁЯзй р╕гр╕зр╕бр╕Бр╕▒р╕Ър╕гр╕лр╕▒р╕кр╣Ар╕Фр╕┤р╕бр╕нр╕вр╣Ир╕▓р╕Зр╕Ыр╕ер╕нр╕Фр╕ар╕▒р╕в
if [[ -f "$KEYLOCK_PATH" && -s "$KEYLOCK_PATH" ]]; then
  EXISTING=$(cat "$KEYLOCK_PATH")
  if echo "$EXISTING" | jq 'type == "array"' | grep -q true; then
    UPDATED=$(echo "$EXISTING" | jq ". + [$NEW_ENTRY]")
  else
    echo "тЭМ р╕гр╕╣р╕Ыр╣Бр╕Ър╕Ъ Keylock.json р╣Др╕бр╣Ир╣Гр╕Кр╣И array тАФ р╕ер╣Йр╕▓р╕Зр╣Др╕Яр╕ер╣Мр╕Бр╣Ир╕нр╕Щр╕лр╕гр╕╖р╕нр╣Бр╕Бр╣Йр╣Др╕Вр╕Фр╣Йр╕зр╕вр╕бр╕╖р╕н"
    exit 1
  fi
else
  UPDATED="[$NEW_ENTRY]"
fi

# ЁЯТ╛ р╣Ар╕Вр╕╡р╕вр╕Щр╕Бр╕ер╕▒р╕Ър╕ер╕Зр╣Др╕Яр╕ер╣М
echo "$UPDATED" > "$KEYLOCK_PATH"

# тЬЕ р╣Бр╕кр╕Фр╕Зр╕Ьр╕ер╕ер╕▒р╕Юр╕Шр╣М
echo ""
echo "тЬЕ р╣Ар╕Юр╕┤р╣Ир╕бр╕гр╕лр╕▒р╕кр╣Гр╕лр╕бр╣Ир╣Ар╕Вр╣Йр╕▓ Keylock.json р╕кр╕│р╣Ар╕гр╣Зр╕И"
echo "ЁЯФР р╕гр╕лр╕▒р╕к (base64): $ENCODED_CODE"
echo "ЁЯУД Path: $KEYLOCK_PATH"
echo ""